#
# https://docs.github.com/en/actions
# https://github.com/actions
#

name: CI

on:
  pull_request: {}
  push: {}

jobs:

  linux:
    if: false
    name: "Linux + PostgreSQL ${{matrix.PGVER}}"
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        PGVER:
          - 10
          - 11
          - 12
          - 13
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "InstallDB"
        run: |
          echo "::group::apt-get-update"
          echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main ${{matrix.PGVER}}" \
          | sudo tee /etc/apt/sources.list.d/pgdg.list
          sudo -nH apt-get -q update
          echo "::endgroup::"

          echo "::group::apt-get-install"

          # disable new cluster creation
          sudo -nH mkdir -p /etc/postgresql-common/createcluster.d
          echo "create_main_cluster = false" | sudo -nH tee /etc/postgresql-common/createcluster.d/no-main.conf

          sudo -nH apt-get -qyu install \
            postgresql-${{matrix.PGVER}} \
            postgresql-server-dev-${{matrix.PGVER}} \
            libpq-dev patchutils
          echo "::endgroup::"

          # tune environment
          echo "::add-path::/usr/lib/postgresql/${{matrix.PGVER}}/bin"
          echo "::set-env name=PGHOST::/tmp"

          dpkg -l postgres\* libpq\* bison\* flex\* gcc\* clang\* libllvm\*

      - name: "Build"
        run: make

      - name: "Install"
        run: sudo -nH bash -c "PATH='${PATH}' make install"

      - name: "StartDB"
        run: |
          rm -rf data log
          mkdir -p log
          LANG=C initdb data
          sed -ri -e "s,^[# ]*(unix_socket_directories).*,\\1='/tmp'," data/postgresql.conf
          pg_ctl -D data -l log/pg.log start || { cat log/pg.log ; exit 1; }

      - name: "Test"
        run: make citest

      - name: "StopDB"
        run: |
          pg_ctl -D data stop
          rm -rf data log /tmp/.s.PGSQL*

  macos:
    name: "MacOS + PostgreSQL ${{matrix.PGVER}}"
    runs-on: macos-10.15
    strategy:
      matrix:
        PGVER:
          - 12
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "InstallDB"
        run: |
          flex --version || true
          bison --version || true
          initdb --version || true
          echo "::group::install"
          brew install patchutils bison flex gnu-sed
          echo "::endgroup::"
          echo "::add-path::/usr/local/opt/flex/bin"
          echo "::add-path::/usr/local/opt/bison/bin"
          echo "::add-path::/usr/local/opt/postgresql/bin"
          echo "PATH=$PATH"
          ls /usr/local/opt
          ls /usr/local/opt/postgresql

      - name: "Build"
        run: |
          echo "PATH=$PATH"
          flex --version || true
          bison --version || true
          initdb --version || true
          make BISON=bison FLEX=flex

      - name: "Install"
        run: sudo -nH bash -c "PATH='${PATH}' make install"

      - name: "StartDB"
        run: |
          rm -rf data log
          mkdir -p log
          LANG=C LC_ALL=C initdb --no-locale data
          gsed -ri -e "s,^[# ]*(unix_socket_directories).*,\\1='/tmp'," data/postgresql.conf
          pg_ctl -D data -l log/pg.log start || { cat log/pg.log ; exit 1; }

      - name: "Test"
        run: make citest

      - name: "StopDB"
        run: |
          pg_ctl -D data stop
          rm -rf data log /tmp/.s.PGSQL*

  windows:
    name: "${{matrix.test.OSNAME}} + PostgreSQL ${{matrix.test.PGVER}}"
    runs-on: windows-2019
    strategy:
      matrix:
        test:
          - {PGVER: 12, OS: "windows-2019", OSNAME: "Windows 2019"}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Copy"
        shell: cmd
        run: |
          xcopy "c:\Program Files\PostgreSQL\12" "c:\pg12"
          echo "::add-path::c:/pg12/bin"

      - name: "Build"
        shell: bash
        run: |
          echo "PATH=$PATH"

          initdb --version || true
          pg_config --version || true
          c:/msys64/bin/flex --version || true
          c:/msys64/bin/bison --version || true
          make FLEX="/c/msys64/bin/flex" BISON="/c/msys64/bin/bison"

